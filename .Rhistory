completeData = cbind(completeData, x = 1:nrow(completeData))
require(ggplot2)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
geom_bar(stat="identity") +
scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(probe)
counter = counter + 1
}
multiplot(plotlist = gplots, cols = sqrt(length(gplots)))
probes = c("cg00817367")
basedir = "O:/HE_MOMA-Data/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
betadata = sapply(probes[1:length(probes)], function(probe) {
print(probe)
unlist(read.csv(paste(basedir, probe, ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE, skip = 2)[-1])
})
completeData = data.frame(sampleName = unlist(rev(rev(sampleinfo[1,])[-1])), group = unlist(sampleinfo[2,-1]), betadata)
ExcludeSamples = c
completeData = subset(completeData, !sampleName %in% ExcludeSamples)
write.table(completeData, "O:/HE_MOMA-Data/MICROARRAY/Prostata/450K_MarmalAid/Scripts/extractedBetas.csv", sep = ";", dec = ",", row.names = FALSE)
###Plots
scriptDir = "O:/HE_MOMA-Data/MICROARRAY/Prostata/450K_MarmalAid/Scripts"
source(paste(scriptDir, "functions.R", sep = "/"))
sampleSheet = read.csv(file = paste(scriptDir, "sampleGroups.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
sampleSheet$Name = gsub("/", "_", sampleSheet$Name)
groups = sapply(unique(sampleSheet$Group), function(groupName) {
subset(sampleSheet, Group == groupName)$Name
})
supergroup = unlist(sapply(completeData$group, function(subgroup) {
if(length(names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]) == 0) return("0")
else names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]
}))
completeData = cbind(completeData, supergroup)
completeData = subset(completeData, supergroup != "0")
completeData = completeData[order(completeData$supergroup),]
completeData = cbind(completeData, x = 1:nrow(completeData))
require(ggplot2)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
geom_bar(stat="identity") +
scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(probe)
counter = counter + 1
}
multiplot(plotlist = gplots, cols = sqrt(length(gplots)))
probes = c("cg00054525") # skift ud fra nedenstående liste
basedir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
sampleinfo
head(sampleinfo)
sampleinfo[,1:10]
library(magrittr)
sampleinfo %>% t %>% head
sampleinfo %>% t %>% write.csv("groups")
sampleinfo %>% t %>% write.csv("O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/groups.csv")
probes = c("cg00054525") # skift ud fra nedenstående liste
#Gen navn	CpG site - 450 k
# *FBXO30-23	  cg23095615
# *MOBKL2B	    cg21244846
# *TPM4	        cg26149167
# *cg127	      cg12799885
# *C1orf43      cg20248458
# *C1orf88      cg08350814
# *FBXO30-09    cg09094393
# no name       cg12799885
# Pan cancer
# *PFKP	        cg07198194
# *GRASP	      cg00817367
# *HIF3A	      cg09789590
# *DOCK2	      cg08862890
# *(SFH)        cg24033558 (filter fra ved stramning af PH < beta 0,2 for maks 19 %)
# *(No CpG-ø)   cg24922143
# tidligere fundne markører
# *CYBA        cg00054525   cg03125427
# *GSTP1       cg06928838
# *RHCG        cg02805106   cg01837657
# *PROM1       cg13164157   cg04203238
# *C1orf114    cg16998150
# *HAPLN3      cg08348496
# Christa
# *ST6GALNAC3  cg21526205
# *ZNF660      cg01139508
# *AOX1        cg27547291
# *(KLF8)      cg09195491  (fra Christas artikel cg06457357 )
# Siri
# *(COL4A6)    cg12737160   cg05064925 (fra Siri's artikel)
# *FAM115A     cg03225210   cg01030534
# *HLF         cg01185682   cg05452524
# *LOC149134   cg03340119   cg03596016
# *LRRC4       cg07871590   cg09296001
# Helle
# (GABRA)     cg12204574
# ikke signifikant forskel mellem blod og PC (p=0.1073068)
basedir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
betadata = sapply(probes[1:length(probes)], function(probe) {
print(probe)
unlist(read.csv(paste(basedir, probe, ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE, skip = 2)[-1])
})
completeData = data.frame(sampleName = unlist(rev(rev(sampleinfo[1,])[-1])), group = unlist(sampleinfo[2,-1]), betadata)
# completeData$group
ExcludeSamples = c
completeData = subset(completeData, !sampleName %in% ExcludeSamples)
write.table(completeData, "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts/extractedBetas.csv", sep = ";", dec = ",", row.names = FALSE)
###Plots
scriptDir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts"
source(paste(scriptDir, "functions.R", sep = "/"))
sampleSheet = read.csv(file = paste(scriptDir, "sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
# sampleGroups_All_cancer_2018-06-25.csv  ## Alle cancer i en gruppe z_cancer
# sampleGroups_PC_BPH 2018-06-25.csv      ## Kun blod, PH , PC
# sampleGroups_CancerGroup_2018-06-25_2_3.csv   ## kun cancer i x grupper
# sampleGroups_PC_BPH inkl normal 2018-06-26.csv  ##### inkl normal væv
# sampleGroups_All_cancer_and_healthy_2018-07-03.csv ## blood, Normal, BPH, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, Normal, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, PC, normal, cancer
# sampleSheet$Name = gsub("/", "_", sampleSheet$Name)
probeInfo = read.csv(paste(scriptDir, "450k_essentialprobesinfo.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
rownames(probeInfo) = probeInfo$TARGETID
groups = sapply(unique(sampleSheet$Group), function(groupName) {
subset(sampleSheet, Group == groupName)$Name
})
supergroup = unlist(sapply(completeData$group, function(subgroup) {
if(length(names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]) == 0) return("0")
else names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]
}))
completeData$supergroup = supergroup
completeData <- subset(completeData, supergroup != "0")
completeData = completeData[order(completeData$supergroup),]
completeData$x = 1:nrow(completeData)
require(ggplot2)
#gplots = list()
#length(gplots) = length(grep("cg", colnames(completeData)))
#counter = 1
#for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
# plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
#gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
# ylim(0,1)+ #added by Mia, not part of original code from Jacob
#geom_bar(stat="identity") +
#scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#theme_bw() +
#ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
#counter = counter + 1
#}
#multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
library(grid)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = supergroup, y = probe, fill = supergroup)) +
ylim(0,1)+ #added by Mia, not part of original code from Jacob
geom_boxplot() +
scale_fill_manual(values = colorRampPalette(c("yellow", "darkgreen"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
counter = counter + 1
}
multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
# For at kunne beregne p-value
table(completeData$supergroup)
# Nedenfor giver samme - and måde at skrive det samme på
# completeData  %>%  select(supergroup)  %>%  table()
# library("dplyr", lib.loc="~/R/win-library/3.2") # for at kunne bruge %>%
# Forat beregne på subgroups i other cancer
probes = c("cg00054525") # skift ud fra nedenstående liste
#Gen navn	CpG site - 450 k
# *FBXO30-23	  cg23095615
# *MOBKL2B	    cg21244846
# *TPM4	        cg26149167
# *cg127	      cg12799885
# *C1orf43      cg20248458
# *C1orf88      cg08350814
# *FBXO30-09    cg09094393
# no name       cg12799885
# Pan cancer
# *PFKP	        cg07198194
# *GRASP	      cg00817367
# *HIF3A	      cg09789590
# *DOCK2	      cg08862890
# *(SFH)        cg24033558 (filter fra ved stramning af PH < beta 0,2 for maks 19 %)
# *(No CpG-ø)   cg24922143
# tidligere fundne markører
# *CYBA        cg00054525   cg03125427
# *GSTP1       cg06928838
# *RHCG        cg02805106   cg01837657
# *PROM1       cg13164157   cg04203238
# *C1orf114    cg16998150
# *HAPLN3      cg08348496
# Christa
# *ST6GALNAC3  cg21526205
# *ZNF660      cg01139508
# *AOX1        cg27547291
# *(KLF8)      cg09195491  (fra Christas artikel cg06457357 )
# Siri
# *(COL4A6)    cg12737160   cg05064925 (fra Siri's artikel)
# *FAM115A     cg03225210   cg01030534
# *HLF         cg01185682   cg05452524
# *LOC149134   cg03340119   cg03596016
# *LRRC4       cg07871590   cg09296001
# Helle
# (GABRA)     cg12204574
# ikke signifikant forskel mellem blod og PC (p=0.1073068)
basedir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
betadata = sapply(probes[1:length(probes)], function(probe) {
print(probe)
unlist(read.csv(paste(basedir, probe, ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE, skip = 2)[-1])
})
completeData = data.frame(sampleName = unlist(rev(rev(sampleinfo[1,])[-1])), group = unlist(sampleinfo[2,-1]), betadata)
# completeData$group
ExcludeSamples = c
completeData = subset(completeData, !sampleName %in% ExcludeSamples)
write.table(completeData, "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts/extractedBetas.csv", sep = ";", dec = ",", row.names = FALSE)
###Plots
scriptDir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts"
source(paste(scriptDir, "functions.R", sep = "/"))
sampleSheet = read.csv(file = paste(scriptDir, "sampleGroups_All_cancer_and_healthy_2018-07-03.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
# sampleGroups_All_cancer_2018-06-25.csv  ## Alle cancer i en gruppe z_cancer
# sampleGroups_PC_BPH 2018-06-25.csv      ## Kun blod, PH , PC
# sampleGroups_CancerGroup_2018-06-25_2_3.csv   ## kun cancer i x grupper
# sampleGroups_PC_BPH inkl normal 2018-06-26.csv  ##### inkl normal væv
# sampleGroups_All_cancer_and_healthy_2018-07-03.csv ## blood, Normal, BPH, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, Normal, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, PC, normal, cancer
# sampleSheet$Name = gsub("/", "_", sampleSheet$Name)
probeInfo = read.csv(paste(scriptDir, "450k_essentialprobesinfo.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
rownames(probeInfo) = probeInfo$TARGETID
groups = sapply(unique(sampleSheet$Group), function(groupName) {
subset(sampleSheet, Group == groupName)$Name
})
supergroup = unlist(sapply(completeData$group, function(subgroup) {
if(length(names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]) == 0) return("0")
else names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]
}))
completeData$supergroup = supergroup
completeData <- subset(completeData, supergroup != "0")
completeData = completeData[order(completeData$supergroup),]
completeData$x = 1:nrow(completeData)
require(ggplot2)
#gplots = list()
#length(gplots) = length(grep("cg", colnames(completeData)))
#counter = 1
#for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
# plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
#gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
# ylim(0,1)+ #added by Mia, not part of original code from Jacob
#geom_bar(stat="identity") +
#scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#theme_bw() +
#ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
#counter = counter + 1
#}
#multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
library(grid)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = supergroup, y = probe, fill = supergroup)) +
ylim(0,1)+ #added by Mia, not part of original code from Jacob
geom_boxplot() +
scale_fill_manual(values = colorRampPalette(c("yellow", "darkgreen"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
counter = counter + 1
}
multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
# For at kunne beregne p-value
table(completeData$supergroup)
# Nedenfor giver samme - and måde at skrive det samme på
# completeData  %>%  select(supergroup)  %>%  table()
# library("dplyr", lib.loc="~/R/win-library/3.2") # for at kunne bruge %>%
# Forat beregne på subgroups i other cancer
probes = c("cg00054525") # skift ud fra nedenstående liste
#Gen navn	CpG site - 450 k
# *FBXO30-23	  cg23095615
# *MOBKL2B	    cg21244846
# *TPM4	        cg26149167
# *cg127	      cg12799885
# *C1orf43      cg20248458
# *C1orf88      cg08350814
# *FBXO30-09    cg09094393
# no name       cg12799885
# Pan cancer
# *PFKP	        cg07198194
# *GRASP	      cg00817367
# *HIF3A	      cg09789590
# *DOCK2	      cg08862890
# *(SFH)        cg24033558 (filter fra ved stramning af PH < beta 0,2 for maks 19 %)
# *(No CpG-ø)   cg24922143
# tidligere fundne markører
# *CYBA        cg00054525   cg03125427
# *GSTP1       cg06928838
# *RHCG        cg02805106   cg01837657
# *PROM1       cg13164157   cg04203238
# *C1orf114    cg16998150
# *HAPLN3      cg08348496
# Christa
# *ST6GALNAC3  cg21526205
# *ZNF660      cg01139508
# *AOX1        cg27547291
# *(KLF8)      cg09195491  (fra Christas artikel cg06457357 )
# Siri
# *(COL4A6)    cg12737160   cg05064925 (fra Siri's artikel)
# *FAM115A     cg03225210   cg01030534
# *HLF         cg01185682   cg05452524
# *LOC149134   cg03340119   cg03596016
# *LRRC4       cg07871590   cg09296001
# Helle
# (GABRA)     cg12204574
# ikke signifikant forskel mellem blod og PC (p=0.1073068)
basedir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
betadata = sapply(probes[1:length(probes)], function(probe) {
print(probe)
unlist(read.csv(paste(basedir, probe, ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE, skip = 2)[-1])
})
completeData = data.frame(sampleName = unlist(rev(rev(sampleinfo[1,])[-1])), group = unlist(sampleinfo[2,-1]), betadata)
# completeData$group
ExcludeSamples = c
completeData = subset(completeData, !sampleName %in% ExcludeSamples)
write.table(completeData, "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts/extractedBetas.csv", sep = ";", dec = ",", row.names = FALSE)
###Plots
scriptDir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts"
source(paste(scriptDir, "functions.R", sep = "/"))
sampleSheet = read.csv(file = paste(scriptDir, "sampleGroups_All_cancer_2018-06-25.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
# sampleGroups_All_cancer_2018-06-25.csv  ## Alle cancer i en gruppe z_cancer
# sampleGroups_PC_BPH 2018-06-25.csv      ## Kun blod, PH , PC
# sampleGroups_CancerGroup_2018-06-25_2_3.csv   ## kun cancer i x grupper
# sampleGroups_PC_BPH inkl normal 2018-06-26.csv  ##### inkl normal væv
# sampleGroups_All_cancer_and_healthy_2018-07-03.csv ## blood, Normal, BPH, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, Normal, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, PC, normal, cancer
# sampleSheet$Name = gsub("/", "_", sampleSheet$Name)
probeInfo = read.csv(paste(scriptDir, "450k_essentialprobesinfo.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
rownames(probeInfo) = probeInfo$TARGETID
groups = sapply(unique(sampleSheet$Group), function(groupName) {
subset(sampleSheet, Group == groupName)$Name
})
supergroup = unlist(sapply(completeData$group, function(subgroup) {
if(length(names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]) == 0) return("0")
else names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]
}))
completeData$supergroup = supergroup
completeData <- subset(completeData, supergroup != "0")
completeData = completeData[order(completeData$supergroup),]
completeData$x = 1:nrow(completeData)
require(ggplot2)
#gplots = list()
#length(gplots) = length(grep("cg", colnames(completeData)))
#counter = 1
#for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
# plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
#gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
# ylim(0,1)+ #added by Mia, not part of original code from Jacob
#geom_bar(stat="identity") +
#scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#theme_bw() +
#ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
#counter = counter + 1
#}
#multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
library(grid)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = supergroup, y = probe, fill = supergroup)) +
ylim(0,1)+ #added by Mia, not part of original code from Jacob
geom_boxplot() +
scale_fill_manual(values = colorRampPalette(c("yellow", "darkgreen"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
counter = counter + 1
}
multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
# For at kunne beregne p-value
table(completeData$supergroup)
# Nedenfor giver samme - and måde at skrive det samme på
# completeData  %>%  select(supergroup)  %>%  table()
probes = c("cg00054525") # skift ud fra nedenstående liste
#Gen navn	CpG site - 450 k
# *FBXO30-23	  cg23095615
# *MOBKL2B	    cg21244846
# *TPM4	        cg26149167
# *cg127	      cg12799885
# *C1orf43      cg20248458
# *C1orf88      cg08350814
# *FBXO30-09    cg09094393
# no name       cg12799885
# Pan cancer
# *PFKP	        cg07198194
# *GRASP	      cg00817367
# *HIF3A	      cg09789590
# *DOCK2	      cg08862890
# *(SFH)        cg24033558 (filter fra ved stramning af PH < beta 0,2 for maks 19 %)
# *(No CpG-ø)   cg24922143
# tidligere fundne markører
# *CYBA        cg00054525   cg03125427
# *GSTP1       cg06928838
# *RHCG        cg02805106   cg01837657
# *PROM1       cg13164157   cg04203238
# *C1orf114    cg16998150
# *HAPLN3      cg08348496
# Christa
# *ST6GALNAC3  cg21526205
# *ZNF660      cg01139508
# *AOX1        cg27547291
# *(KLF8)      cg09195491  (fra Christas artikel cg06457357 )
# Siri
# *(COL4A6)    cg12737160   cg05064925 (fra Siri's artikel)
# *FAM115A     cg03225210   cg01030534
# *HLF         cg01185682   cg05452524
# *LOC149134   cg03340119   cg03596016
# *LRRC4       cg07871590   cg09296001
# Helle
# (GABRA)     cg12204574
# ikke signifikant forskel mellem blod og PC (p=0.1073068)
basedir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/ProcessedData/betavalues/"
sampleinfo = read.csv(paste(basedir, probes[1], ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE)[1:2,]
betadata = sapply(probes[1:length(probes)], function(probe) {
print(probe)
unlist(read.csv(paste(basedir, probe, ".csv", sep = ""), sep = ";", header = FALSE, stringsAsFactors = FALSE, skip = 2)[-1])
})
completeData = data.frame(sampleName = unlist(rev(rev(sampleinfo[1,])[-1])), group = unlist(sampleinfo[2,-1]), betadata)
# completeData$group
ExcludeSamples = c
completeData = subset(completeData, !sampleName %in% ExcludeSamples)
write.table(completeData, "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts/extractedBetas.csv", sep = ";", dec = ",", row.names = FALSE)
###Plots
scriptDir = "O:/HE_MOMA-Common/DATA/MICROARRAY/Prostata/450K_MarmalAid/Scripts"
source(paste(scriptDir, "functions.R", sep = "/"))
sampleSheet = read.csv(file = paste(scriptDir, "sampleGroups_CancerGroup_2018-06-25_2_3.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
# sampleGroups_All_cancer_2018-06-25.csv  ## Alle cancer i en gruppe z_cancer
# sampleGroups_PC_BPH 2018-06-25.csv      ## Kun blod, PH , PC
# sampleGroups_CancerGroup_2018-06-25_2_3.csv   ## kun cancer i x grupper
# sampleGroups_PC_BPH inkl normal 2018-06-26.csv  ##### inkl normal væv
# sampleGroups_All_cancer_and_healthy_2018-07-03.csv ## blood, Normal, BPH, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, Normal, PC, cancer
# sampleGroups_All_cancer_and_healthy_2018-07-03 udgave 1_2.csv ## blood, BPH, PC, normal, cancer
# sampleSheet$Name = gsub("/", "_", sampleSheet$Name)
probeInfo = read.csv(paste(scriptDir, "450k_essentialprobesinfo.csv", sep = "/"), sep = ";", stringsAsFactors = FALSE)
rownames(probeInfo) = probeInfo$TARGETID
groups = sapply(unique(sampleSheet$Group), function(groupName) {
subset(sampleSheet, Group == groupName)$Name
})
supergroup = unlist(sapply(completeData$group, function(subgroup) {
if(length(names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]) == 0) return("0")
else names(groups)[grep(paste("\\b", subgroup, "\\b", sep = ""), groups)]
}))
completeData$supergroup = supergroup
completeData <- subset(completeData, supergroup != "0")
completeData = completeData[order(completeData$supergroup),]
completeData$x = 1:nrow(completeData)
require(ggplot2)
#gplots = list()
#length(gplots) = length(grep("cg", colnames(completeData)))
#counter = 1
#for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
# plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
#gplots[[counter]] = ggplot(plotData, aes(x = x, y = probe, color = supergroup, fill = supergroup)) +
# ylim(0,1)+ #added by Mia, not part of original code from Jacob
#geom_bar(stat="identity") +
#scale_color_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#scale_fill_manual(values = colorRampPalette(c("lightgrey", "darkblue"))(length(unique(plotData$supergroup)))) +
#theme_bw() +
#ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
#counter = counter + 1
#}
#multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
library(grid)
gplots = list()
length(gplots) = length(grep("cg", colnames(completeData)))
counter = 1
for(probe in colnames(completeData)[grep("cg", colnames(completeData))]) {
plotData = data.frame(supergroup = completeData$supergroup, x = completeData$x, probe = completeData[,which(colnames(completeData) == probe)])
gplots[[counter]] = ggplot(plotData, aes(x = supergroup, y = probe, fill = supergroup)) +
ylim(0,1)+ #added by Mia, not part of original code from Jacob
geom_boxplot() +
scale_fill_manual(values = colorRampPalette(c("yellow", "darkgreen"))(length(unique(plotData$supergroup)))) +
theme_bw() +
ggtitle(paste(probe, probeInfo[probe,"GENE_BY_JBBR"], sep = " - "))
counter = counter + 1
}
multiplot(plotlist = gplots, cols = ceiling(sqrt(length(gplots)))) #the ceiling function was added by Mia
# For at kunne beregne p-value
table(completeData$supergroup)
# Nedenfor giver samme - and måde at skrive det samme på
# completeData  %>%  select(supergroup)  %>%  table()
# library("dplyr", lib.loc="~/R/win-library/3.2") # for at kunne bruge %>%
# Forat beregne på subgroups i other cancer
table(completeData$supergroup) %>% sum
(table(completeData$supergroup) %>% sum) - 187
